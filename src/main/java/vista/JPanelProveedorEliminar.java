/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import dao.ProveedorDAO;
import dao.Conexion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author admin
 */
public class JPanelProveedorEliminar extends javax.swing.JPanel {

    private int idProveedor;

    /**
     * Creates new form JPanelCategoriaNuevo
     */
    public JPanelProveedorEliminar() {
        initComponents();
        this.setSize(new Dimension(900, 400));

        this.cargarProveedoresEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableProveedor = new javax.swing.JTable();
        btnActivar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Eliminar Proveedor");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(450, 80));

        tableProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre comercial", "Nombre de Contacto", "Telefono", "Email", "Direccion", "Tipo de producto"
            }
        ));
        jScrollPane3.setViewportView(tableProveedor);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 850, 290));

        btnActivar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/activar.png"))); // NOI18N
        btnActivar.setText("Activar");
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });
        add(btnActivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 140, 30));

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/desactivar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed
        this.activar();
    }//GEN-LAST:event_btnActivarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        desactivarProveedor();
    }//GEN-LAST:event_btnEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tableProveedor;
    // End of variables declaration//GEN-END:variables

    private void cargarProveedoresEnTabla() {
        DefaultTableModel model = new DefaultTableModel();

        String sql = "SELECT idProveedor, ruc, nombreProveedor, telefonoProveedor, "
                + "correoProveedor, direccionProveedor, estado FROM proveedor";

        try (Connection con = Conexion.conectar(); Statement st = con.createStatement(); ResultSet rs = st.executeQuery(sql)) {

            model.addColumn("ID");
            model.addColumn("RUC");
            model.addColumn("Nombre Comercial");
            model.addColumn("Teléfono");
            model.addColumn("Email");
            model.addColumn("Dirección");
            model.addColumn("Estado");

            while (rs.next()) {
                Object[] fila = new Object[7];
                fila[0] = rs.getInt("idProveedor");
                fila[1] = rs.getString("ruc");
                fila[2] = rs.getString("nombreProveedor");
                fila[3] = rs.getString("telefonoProveedor");
                fila[4] = rs.getString("correoProveedor");
                fila[5] = rs.getString("direccionProveedor");
                fila[6] = rs.getInt("estado") == 1 ? "Activo" : "Inactivo";

                model.addRow(fila);
            }

            tableProveedor.setModel(model);
        } catch (SQLException e) {
            System.err.println("Error al llenar la tabla de proveedores: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al cargar los proveedores: " + e.getMessage());
        }
    }

    private void activar() {
        int fila = tableProveedor.getSelectedRow();

        if (fila != -1) {
            String estadoTabla = tableProveedor.getValueAt(fila, 6).toString();
            if (estadoTabla.equalsIgnoreCase("Activo")) {
                JOptionPane.showMessageDialog(null, "El proveedor ya está activo.");
                return;
            }

            idProveedor = Integer.parseInt(tableProveedor.getValueAt(fila, 0).toString());

            ProveedorDAO controlProveedor = new ProveedorDAO();
            boolean proveedorActivado = controlProveedor.activar(idProveedor);

            if (proveedorActivado) {
                JOptionPane.showMessageDialog(null, "Proveedor activado correctamente.");
                this.cargarProveedoresEnTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error al activar el proveedor.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un proveedor para activar.");
        }
    }

    private void desactivarProveedor() {
        int fila = tableProveedor.getSelectedRow();

        if (fila != -1) {
            String estadoTabla = tableProveedor.getValueAt(fila, 6).toString();
            if (estadoTabla.equalsIgnoreCase("Inactivo")) {
                JOptionPane.showMessageDialog(null, "El proveedor ya ha sido desactivado anteriormente.");
                return;
            }

            idProveedor = Integer.parseInt(tableProveedor.getValueAt(fila, 0).toString());

            ProveedorDAO controlProveedor = new ProveedorDAO();
            boolean proveedorDesactivado = controlProveedor.desactivar(idProveedor);

            if (proveedorDesactivado) {
                JOptionPane.showMessageDialog(null, "Proveedor desactivado correctamente.");
                this.cargarProveedoresEnTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error al desactivar el proveedor.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un proveedor para desactivar.");
        }
    }
}
