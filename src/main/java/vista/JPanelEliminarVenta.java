/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.VentaController;
import dao.Conexion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.ResultSet;

/**
 *
 * @author admin
 */
public class JPanelEliminarVenta extends javax.swing.JPanel {

    /**
     * Creates new form JPanelCategoriaNuevo
     */
    public JPanelEliminarVenta() {
        initComponents();
        this.setSize(new Dimension(900, 400));

        this.cargarVentasEnTabla();
        this.verificarExistenciaVentas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableVentas = new javax.swing.JTable();
        btnActivar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Eliminar Ventas");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(450, 80));

        tableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "Rol", "Cedula", "Direccion", "Telefono", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tableVentas);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 850, 300));

        btnActivar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/activar.png"))); // NOI18N
        btnActivar.setText("Activar");
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });
        add(btnActivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 140, 30));

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/desactivar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed
        this.activarVenta();
    }//GEN-LAST:event_btnActivarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.desactivarVenta();
    }//GEN-LAST:event_btnEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tableVentas;
    // End of variables declaration//GEN-END:variables

    private void cargarVentasEnTabla() {
        Connection con = null;
        DefaultTableModel model = new DefaultTableModel();

        String sql = "SELECT cv.idCabeceraVenta, cv.fechaVenta, cv.total, "
                + "CONCAT(cl.nombre, ' ', cl.apellido) AS nombre_cliente, " 
                + "CONCAT(ue.nombre, ' ', ue.apellido) AS nombre_empleado, cv.estado "
                + "FROM CabeceraVenta cv "
                + "INNER JOIN Cliente cl ON cv.idCliente = cl.idCliente " 
                + "INNER JOIN Empleado em ON cv.idEmpleado = em.idEmpleado "
                + "INNER JOIN Usuario ue ON em.idUsuario = ue.idUsuario ";

        try {
            con = Conexion.conectar();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            model.addColumn("ID Venta");
            model.addColumn("Fecha");
            model.addColumn("Total");
            model.addColumn("Cliente");
            model.addColumn("Empleado");
            model.addColumn("Estado");

            boolean hayRegistros = false;

            while (rs.next()) {
                hayRegistros = true;
                Object[] fila = new Object[6]; 
                fila[0] = rs.getInt("idCabeceraVenta");
                fila[1] = rs.getDate("fechaVenta");
                fila[2] = rs.getDouble("total");
                fila[3] = rs.getString("nombre_cliente");
                fila[4] = rs.getString("nombre_empleado");
                fila[5] = (rs.getInt("estado") == 1) ? "Activa" : "Anulada";
                model.addRow(fila);
            }
            if (!hayRegistros) {
                JOptionPane.showMessageDialog(null, "No existen ventas registradas actualmente.");
            }

            tableVentas.setModel(model);
            jScrollPane3.setViewportView(tableVentas);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar ventas: " + e.getMessage());
            System.err.println("Error al cargar ventas: " + e.getMessage());
        } finally {
            try {
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                System.err.println("Error al cerrar conexión: " + e.getMessage());
            }
        }
    }

    private void verificarExistenciaVentas() {
        Connection con = null;
        try {
            con = Conexion.conectar();
            String sql = "SELECT COUNT(*) FROM CabeceraVenta";
            try (PreparedStatement ps = con.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                if (rs.next() && rs.getInt(1) == 0) {
                    JOptionPane.showMessageDialog(null, "No existen ventas en el sistema.");
                }
            }
        } catch (SQLException e) {
            System.err.println("Error al verificar ventas: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al verificar ventas: " + e.getMessage());
        } finally {
            try {
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                System.err.println("Error al cerrar conexión: " + e.getMessage());
            }
        }
    }

    private void activarVenta() {
        int fila = tableVentas.getSelectedRow();

        if (fila != -1) {
            String estadoActual = tableVentas.getValueAt(fila, 5).toString();
            if (estadoActual.equalsIgnoreCase("Activa")) {
                JOptionPane.showMessageDialog(null, "La venta ya está activa.");
                return;
            }

            int idVenta = Integer.parseInt(tableVentas.getValueAt(fila, 0).toString());

            VentaController controller = new VentaController();
            if (controller.activar(idVenta)) {
                JOptionPane.showMessageDialog(null, "Venta activada correctamente.");
                cargarVentasEnTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error al activar la venta.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una venta para activar.");
        }
    }

    private void desactivarVenta() {
        int fila = tableVentas.getSelectedRow();

        if (fila != -1) {
            String estadoActual = tableVentas.getValueAt(fila, 5).toString();
            if (estadoActual.equalsIgnoreCase("Anulada")) {
                JOptionPane.showMessageDialog(null, "La venta ya ha sido anulada.");
                return;
            }

            int idVenta = Integer.parseInt(tableVentas.getValueAt(fila, 0).toString());

            VentaController controller = new VentaController();
            if (controller.desactivar(idVenta)) {
                JOptionPane.showMessageDialog(null, "Venta anulada correctamente.");
                cargarVentasEnTabla();
            } else {
                JOptionPane.showMessageDialog(null, "Error al anular la venta.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una venta para anular.");
        }
    }
}
