/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.CategoriaController;
import controlador.ProductoController;
import controlador.ProveedorController;
import dao.CategoriaDAO;
import dao.ProveedorDAO;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Categoria;
import modelo.Producto;
import modelo.Proveedor;
import java.util.List;

/**
 *
 * @author admin
 */
public class JPanelProductoNuevo extends javax.swing.JPanel {

    private Categoria obtenerIdCategoria = new Categoria();
    private Proveedor obtenerIdProveedor = new Proveedor();

    /**
     * Creates new form JPanelCategoriaNuevo
     */
    public JPanelProductoNuevo() {
        initComponents();
        this.setSize(new Dimension(900, 400));
        this.cargarCategoriasEnComboBox();
        this.cargarProveedoresEnComboBox();

        this.cargarProductosEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cboxProveedor = new javax.swing.JComboBox<>();
        txtStock = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDescripcion = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        cboxCategoria = new javax.swing.JComboBox<>();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableProducto = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Productos");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Nombre del producto:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Categoria:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, -1, -1));
        add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 190, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Precio:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Cantidad en stock:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Descripción:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, -1, -1));

        cboxProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione proveedor", "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cboxProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 300, -1));
        add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 190, -1));
        add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 190, -1));

        textAreaDescripcion.setColumns(20);
        textAreaDescripcion.setRows(5);
        jScrollPane2.setViewportView(textAreaDescripcion);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 320, 70));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Proveedor:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, -1, -1));

        cboxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione categoria", "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cboxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 290, -1));

        btnLimpiar.setBackground(new java.awt.Color(204, 204, 255));
        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 90, 30));

        btnGuardar.setBackground(new java.awt.Color(204, 204, 255));
        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 300, 90, 30));

        jScrollPane4.setPreferredSize(new java.awt.Dimension(450, 80));

        tableProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Proveedor", "Cantidad", "Descripción", "Precio", "Iva", "Categoria", "Estado"
            }
        ));
        jScrollPane4.setViewportView(tableProducto);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 850, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.setear();
        this.cargarProductosEnTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Producto producto = new Producto();
        ProductoController productoController = new ProductoController();

        String nombreProducto = txtNombreProducto.getText().trim();
        String stockTexto = txtStock.getText().trim();
        String precioTexto = txtPrecio.getText().trim();
        String descripcion = textAreaDescripcion.getText().trim();
        String nombreCategoriaSeleccionada = cboxCategoria.getSelectedItem().toString();
        String nombreProveedorSeleccionado = cboxProveedor.getSelectedItem().toString();

        if (productoController.existeProductoPorNombre(nombreProducto)) {
            JOptionPane.showMessageDialog(null, "El producto ya existe con este nombre.");
            return;
        }

        if (!validarCampos(nombreProducto, stockTexto, precioTexto, descripcion)) {
            return;
        }

        try {
            String nombreFormateado = nombreProducto.substring(0, 1).toUpperCase() + nombreProducto.substring(1).toLowerCase();
            producto.setNombreProducto(nombreFormateado);

            producto.setCantidad(Integer.parseInt(stockTexto));

            String precioFormateado = precioTexto.replace(",", ".");
            producto.setPrecio(Double.parseDouble(precioFormateado));

            producto.setDescripcion(descripcion);
            producto.setPorcentajeIva(12);
            producto.setEstado(1);

            this.obtenerIdCategoriaSeleccionada();
            producto.setIdCategoria(obtenerIdCategoria);

            this.obtenerIdProveedorSeleccionado();
            producto.setIdProveedor(obtenerIdProveedor);

            if (productoController.guardarProducto(producto, nombreCategoriaSeleccionada, nombreProveedorSeleccionado)) {
                JOptionPane.showMessageDialog(null, "Producto guardado con IVA del 12%.");
                this.cargarCategoriasEnComboBox();
                this.cargarProveedoresEnComboBox();

                this.cboxProveedor.setSelectedItem("Seleccione proveedor");
                this.cboxCategoria.setSelectedItem("Seleccione categoria");
                this.cargarProductosEnTabla();
                this.setear();
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar el producto.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error de formato en stock o precio: " + e.getMessage());
            System.err.println("Error de formato numérico al guardar producto: " + e.getMessage());
        } catch (Exception e) {
            System.err.println("Error inesperado al guardar producto: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error inesperado al guardar el producto.");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cboxCategoria;
    private javax.swing.JComboBox<String> cboxProveedor;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTable tableProducto;
    private javax.swing.JTextArea textAreaDescripcion;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables

    private void cargarCategoriasEnComboBox() {
        CategoriaController controller = new CategoriaController();
        List<Categoria> categorias = controller.obtenerTodasLasCategorias();

        cboxCategoria.removeAllItems();
        cboxCategoria.addItem("Seleccionar categoria");

        for (Categoria cat : categorias) {
            cboxCategoria.addItem(cat.getNombre());
        }
    }

    private void cargarProveedoresEnComboBox() {
        ProveedorController controller = new ProveedorController();
        List<Proveedor> proveedores = controller.obtenerTodosLosProveedores();

        cboxProveedor.removeAllItems();
        cboxProveedor.addItem("Seleccionar proveedor");

        for (Proveedor prov : proveedores) {
            cboxProveedor.addItem(prov.getNombre());
        }
    }

    private void cargarProductosEnTabla() {
        DefaultTableModel model = new DefaultTableModel();
        ProductoController controller = new ProductoController();

        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Proveedor");
        model.addColumn("Cantidad");
        model.addColumn("Descripción");
        model.addColumn("Precio");
        model.addColumn("IVA");
        model.addColumn("Categoría");
        model.addColumn("Estado");

        List<Producto> productos = controller.obtenerTodosLosProductos();

        if (productos.isEmpty()) {
        } else {
            for (Producto p : productos) {
                Object[] fila = new Object[9];
                fila[0] = p.getIdProducto();
                fila[1] = p.getNombreProducto();
                fila[2] = p.getIdProveedor().getNombre();
                fila[3] = p.getCantidad();
                fila[4] = p.getDescripcion();
                fila[5] = p.getPrecio();
                fila[6] = String.format("%.2f", p.getPorcentajeIva() / 100.0);
                fila[7] = p.getIdCategoria().getNombre();
                fila[8] = (p.getEstado() == 1) ? "Activo" : "Inactivo";
                model.addRow(fila);
            }
        }
        tableProducto.setModel(model);
        jScrollPane4.setViewportView(tableProducto);
    }

    private int obtenerIdCategoriaSeleccionada() {
        String descripcion = (String) cboxCategoria.getSelectedItem();
        CategoriaDAO dao = new CategoriaDAO();
        return dao.getIdCategoriaPorNombre(descripcion);
    }

    private int obtenerIdProveedorSeleccionado() {
        String nombre = (String) cboxProveedor.getSelectedItem();
        ProveedorDAO dao = new ProveedorDAO();
        return dao.getIdProveedorPorNombre(nombre);
    }

    private void setear() {
        txtNombreProducto.setText("");
        cboxProveedor.setSelectedIndex(0);
        cboxCategoria.setSelectedIndex(0);
        txtPrecio.setText("");
        txtStock.setText("");
        textAreaDescripcion.setText("");
    }

    private boolean validarCampos(String nombreProducto, String stockTexto, String precioTexto, String descripcion) {
        if (nombreProducto.isEmpty() || stockTexto.isEmpty() || precioTexto.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos obligatorios vacíos");
            return false;
        }

        if (!stockTexto.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Formato de dato incorrecto.");
            return false;
        }

        if (!precioTexto.matches("^\\d+(\\.\\d{1,2})?$") && !precioTexto.matches("^\\d+(,\\d{1,2})?$")) {
            JOptionPane.showMessageDialog(null, "Formato de dato incorrecto.");
            return false;
        }

        if (cboxCategoria.getSelectedIndex() == 0 || cboxProveedor.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Campos obligatorios vacíos");
            return false;
        }

        return true;
    }
}
