/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.ProductoController;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import modelo.Producto;

/**
 *
 * @author admin
 */
public class JPanelConsultarProducto extends javax.swing.JPanel {
    private ProductoController productoController;

    /**
     * Creates new form JPanelCategoriaNuevo
     */
    public JPanelConsultarProducto() {
        initComponents();
        this.setSize(new Dimension(900, 400));

        productoController = new ProductoController();
        this.cargarProductosEnTabla();
        this.verificarExistenciaProductos();
        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent e) {
                String texto = txtBuscador.getText().trim();
                if (texto.isEmpty()) {
                    cargarProductosEnTabla();
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableProducto = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtBuscador = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Consultar Producto - Por nombre");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(450, 80));

        tableProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Proveedor", "Cantidad", "Descripción", "Precio", "Iva", "Categoria", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tableProducto);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 840, 260));

        btnLimpiar.setBackground(new java.awt.Color(204, 204, 255));
        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 60, 90, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        jLabel8.setText("Buscar:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 30));

        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscadorKeyPressed(evt);
            }
        });
        add(txtBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 530, -1));

        btnBuscar.setBackground(new java.awt.Color(204, 204, 255));
        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 60, 90, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtBuscador.setText("");
        this.cargarProductosEnTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.buscarProductos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.buscarProductos();
        }
    }//GEN-LAST:event_txtBuscadorKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tableProducto;
    private javax.swing.JTextField txtBuscador;
    // End of variables declaration//GEN-END:variables

    private void cargarProductosEnTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{
            "ID", "Nombre", "Proveedor", "Cantidad", "Descripción", "Precio", "Iva", "Categoría", "Estado"
        });

        List<Producto> productos = productoController.obtenerTodosLosProductos();

        for (Producto p : productos) {
            model.addRow(new Object[]{
                p.getIdProducto(),
                p.getNombreProducto(),
                p.getProveedor(),
                p.getCantidad(),
                p.getDescripcion(),
                p.getPrecio(),
                String.format("%.2f", p.getPorcentajeIva() / 100.0),
                p.getCategoria(),
                (p.getEstado() == 1) ? "Activo" : "Inactivo"
            });
        }

        tableProducto.setModel(model);
    }

    private void buscarProductos() {
        String criterio = txtBuscador.getText().trim();
        ProductoController controller = new ProductoController();

        if (criterio.isEmpty()) {
            cargarProductosEnTabla();
            return;
        }

        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{
            "ID", "Nombre", "Proveedor", "Cantidad", "Descripción", "Precio", "Iva", "Categoría", "Estado"
        });

        Producto productoEncontrado = controller.obtenerProductoPorNombre(criterio);

        if (productoEncontrado != null) {
            Object[] fila = new Object[9];
            fila[0] = productoEncontrado.getIdProducto();
            fila[1] = productoEncontrado.getNombreProducto();
            fila[2] = productoEncontrado.getProveedor().getNombre();
            fila[3] = productoEncontrado.getCantidad();
            fila[4] = productoEncontrado.getDescripcion();
            fila[5] = productoEncontrado.getPrecio();
            fila[6] = String.format("%.2f", productoEncontrado.getPorcentajeIva() / 100.0);
            fila[7] = productoEncontrado.getCategoria().getNombre();
            fila[8] = (productoEncontrado.getEstado() == 1) ? "Activo" : "Inactivo";
            model.addRow(fila);

            tableProducto.setModel(model);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró el producto con ese nombre");
            cargarProductosEnTabla();
        }
    }

    private void verificarExistenciaProductos() {
        ProductoController controller = new ProductoController();
        if (!controller.existenProductosEnSistema()) {
            JOptionPane.showMessageDialog(null, "No existen productos en el sistema");
        }
    }
}
