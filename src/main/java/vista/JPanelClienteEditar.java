/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.ClienteController;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import modelo.Cliente;
import static vista.JPanelClienteNuevo.tableCliente;

/**
 *
 * @author admin
 */
public class JPanelClienteEditar extends javax.swing.JPanel {
    private ClienteController clienteController;
    private int idCliente;

    /**
     * Creates new form JPanelCategoriaNuevo
     */
    public JPanelClienteEditar() {
        initComponents();
        this.setSize(new Dimension(900, 400));

        clienteController =  new ClienteController();
        this.cargarClientesEnTabla();
        this.verificarExistenciaClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCliente = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        txtCedulaRuc = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Actualizar Clientes");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Cédula:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 280, 110, -1));
        add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 260, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Apellidos:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Nombres:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));
        add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 270, -1));
        add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 270, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Telefono:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 330, 80, -1));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(450, 80));

        tableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID cliente", "Cédula", "Nombres", "Apellidos", "Telefono", "Dirección", "Correo", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tableCliente);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 840, 190));

        btnLimpiar.setBackground(new java.awt.Color(204, 204, 255));
        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 90, 30));

        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar-producto.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 140, 30));

        txtCedulaRuc.setEditable(false);
        txtCedulaRuc.setEnabled(false);
        add(txtCedulaRuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 260, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Email:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, -1, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 270, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Dirección:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, -1, -1));
        add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 270, -1));
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Permite limpiar o setear los campos de texto del cliente
     *
     * @param evt evento que se realiza cuando se da click al botón
     */
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.setear();
        this.cargarClientesEnTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String cedula = txtCedulaRuc.getText().trim();
        String nombres = txtNombres.getText().trim();
        String apellidos = txtApellidos.getText().trim();
        String telefono = txtTelefono.getText().trim();
        String email = txtEmail.getText().trim();
        String direccion = txtDireccion.getText().trim();
        int estado = 1;
        
        String mensaje = clienteController.actualizarCliente(cedula, nombres, apellidos, telefono, email, direccion, estado, idCliente);
        JOptionPane.showMessageDialog(this, mensaje);

        if (mensaje.contains("correctamente")) {
            this.setear();
            this.cargarClientesEnTabla();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tableCliente;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCedulaRuc;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    
    private void setear() {
        txtCedulaRuc.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
        txtDireccion.setText("");
        idCliente = 0;
        txtCedulaRuc.setEditable(false);
        txtCedulaRuc.setEnabled(false);
    }

    private void cargarClientesEnTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{
            "ID Cliente", "Cédula", "Nombres", "Apellidos", "Teléfono", "Dirección", "Correo", "Estado"
        });

        List<Cliente> clientes = clienteController.obtenerTodosLosClientes();

        for (Cliente c : clientes) {
            model.addRow(new Object[]{
                c.getIdCliente(),
                c.getCedula(),
                c.getNombre(),
                c.getApellido(),
                c.getTelefono(),
                c.getDireccion(),
                c.getCorreo(),
                (c.getEstado() == 1) ? "Activo" : "Inactivo"
            });
        }

        tableCliente.setModel(model);
        tableCliente.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int fila = tableCliente.getSelectedRow();
                if (fila!= -1) {
                    idCliente = Integer.parseInt(tableCliente.getValueAt(fila, 0).toString());
                    enviarDatosCliente(idCliente);
                }
            }
        });
    }
   
    private void enviarDatosCliente(int idCliente) {
        Cliente cliente = clienteController.obtenerClientePorId(idCliente);

        if (cliente != null) {
            txtCedulaRuc.setText(cliente.getCedula());
            txtNombres.setText(cliente.getNombre());
            txtApellidos.setText(cliente.getApellido());
            txtTelefono.setText(cliente.getTelefono());
            txtDireccion.setText(cliente.getDireccion());
            txtEmail.setText(cliente.getCorreo());
            txtCedulaRuc.setEditable(false);
            txtCedulaRuc.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró el cliente seleccionado.");
            setear();
        }
    }
    
    private void verificarExistenciaClientes() {
        if (!clienteController.existenClientesEnSistema()) {
            JOptionPane.showMessageDialog(null, "No existen clientes en el sistema.");
        }
    }
}
